html, body {
  margin: 0; /* Удаляем отступы по умолчанию */
  padding: 0;
}
body {
  background-image: url('./Image/back_body.jpg'); /* Путь к вашему фоновому изображению */
  background-size: cover; /* Покрывает весь экран */
  background-repeat: no-repeat; /* Не повторяет изображение */
  background-attachment: fixed; /* Фиксирует изображение при скроллинге */
  background-position: center; /* Выравнивает изображение по центру */
  display:flex;
  justify-content: center;
  align-items: center;
}
h1 {
  position: relative;
  padding: 0;
  margin-left: 15px;
  font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-weight: 300;
  font-size: 40px;
  color: #ffffff;
  -webkit-transition: all 0.4s ease 0s;
  -o-transition: all 0.4s ease 0s;
  transition: all 0.4s ease 0s;
  margin-bottom: 20px;
  text-align: left;
}

h1 span {
  display: block;
  font-size: 0.5em;
  line-height: 1.3;
}
h1 em {
  font-style: normal;
  font-weight: 600;
}
/* === HEADING STYLE #3 === */
.three h1 {
  font-size: 28px;
  font-weight: 500;
  letter-spacing: 0;
  line-height: 1.5em;
  padding-bottom: 15px;
  position: relative;
}
.three h1:before {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  height: 5px;
  width: 55px;
  background-color: #b7ff00;
}
.three h1:after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 2px;
  height: 1px;
  width: 50%;
  max-width: 90%;
  background-color: #ffffff;
}

.container {
  max-width: 1200px;
  display: flex;
  flex-wrap: wrap; /* Карточки занимают новую строку, когда нет места в текущей */
  justify-content:center; /* Карточки выравниваются по левому краю */
  gap: 20px; /* Отступы между карточками */
  padding: 10px; /* Отступы внутри контейнера */
  box-sizing: border-box; /* Включаем padding и border в ширину и высоту элементов */
}
.cards{
  display: none;
}

.orders_section{
  max-width: 95%;
  margin: 0 auto;
}

.card {
  flex: 0 0 175px; /* Карточки фиксированной ширины и не растягиваются */
  min-height: 160px;
  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.3);
  display: flex;
  flex-direction: column;
  border-radius: 20px;
  transition: 0.2s;
  background-color: #BFDBFE;
  background-color: rgba(255, 255, 255, 0.25);
  box-sizing: border-box; /* Включаем padding и border в ширину и высоту элемента */
}

/* При наведении на карточку - меняем цвет тени */
.card:hover {
  box-shadow: 4px 8px 16px rgba(15, 0, 74, 0.3);
}

.card__top {
  flex: 0 0 150px;
  /* Задаем высоту 220px, запрещаем расширение и сужение по высоте */
  position: relative;
  overflow: hidden;
  /* Скрываем, что выходит за пределы */
}

/* Контейнер для картинки */
.card__image {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.card__image>img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  /* Встраиваем картинку в контейнер card__image */
  transition: 0.2s;
}

/* При наведении - увеличиваем картинку */
.card__image:hover>img {
  transform: scale(1.1);
}

.card__bottom {
  display: flex;
  flex-direction: column;
  flex: 1 0 auto;
  /* Занимаем всю оставшуюся высоту карточки */
  padding: 5px;
}

.product_title {
  font-style: normal;
  text-align: center;
  font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-size: 16px;
  font-weight: 200;
  margin-bottom: 5px;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  color: rgb(255, 255, 255)
}

.card__add {
  display: block;
  outline: 0;
  border: none;
  box-shadow: none;
  cursor: pointer;
  padding: 9px 22px;
  font-size: 16px;
  height: 40px;
  font-weight: 400;
  color: #fff;
  text-align: center;
  line-height: normal;
  background: linear-gradient(90deg, #5522fa 0, #0074e4 100%);
  border-radius: 40px;
  transition: color .2s ease, background-color .2s ease, box-shadow .2s ease;
  font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;

}

.card__add:hover {
  box-shadow: 0 0 0 0.15rem #5ceace;
}

.input__order {
  display: block;
  outline: 0;
  border: none;
  box-shadow: none;
  cursor: pointer;
  width: 70%; /* Установка ширины */
  height: 70%; /* Установка высоты */
  padding: 9px 22px;
  font-size: 18px;
  font-weight: 400;
  color: #fff;
  text-align: center;
  line-height: 40px;
  background: linear-gradient(90deg, #5522fa 0, #0074e4 100%);
  border-radius: 40px;
  transition: color .2s ease, background-color .2s ease, box-shadow .2s ease;
}

.input__order:focus {
  color: #212529;
  background-color: #fff;
  border-color: #86b7fe;
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgb(13 110 253 / 25%);

}
.container__order {
  max-width: 95%;
  margin: 0 auto;
  background-color: #BFDBFE;
  background-color: rgba(255, 255, 255, 0.25);
  border-radius: 10px;
  display: none;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  margin-left: 20px;
}

.header b{
  font-size: 18px;
  color: #fff;
}
.container__order h3 {
  font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  color: #fff;
  font-size: 14px;
}

.order-item {
  display: flex;
  justify-content: space-between;
  margin-bottom: 15px;
  margin: 20px;
  align-items: center;
}

.order-item img {
  width: 50px;
  height: 40px;
  margin-right: 10px;
}

.item-details {
  flex-grow: 1;
}

.item-name {
  font-weight: bold;
  color: #fff;
}
.quantity__order {
  display: block;
  outline: 0;
  border: none;
  box-shadow: none;
  cursor: pointer;
  width: 50px; /* Установка ширины */
  height: 10px; /* Установка высоты */
  padding: 9px 22px;
  font-size: 18px;
  font-weight: 400;
  color: #fff;
  text-align: center;
  line-height: 40px;
  background: linear-gradient(90deg, #5522fa 0, #0074e4 100%);
  border-radius: 40px;
  transition: color .2s ease, background-color .2s ease, box-shadow .2s ease;
}

.sticky-button {
  position: fixed; /* Для Safari */
  position: sticky;       /* Позиционирование sticky */
  bottom: 0;              /* Положение внизу */
  padding: 10px 20px;     /* Внутренние отступы */
  background-color: #007bff;  /* Цвет фона */
  color: #fff;            /* Цвет текста */
  border: none;           /* Убрать границу */
  border-radius: 5px;     /* Скругленные углы */
  cursor: pointer;        /* Курсор при наведении */
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); /* Тень */
  width: 100%;
  background: linear-gradient(90deg, #5522fa 0, #0074e4 30%);
  height: 50px;
  border-radius: 10px;
}

.sticky-button::before {
  content: "\f07a"; /* Здесь используется FontAwesome Unicode для корзины */
  font-family: "Font Awesome 5 Free"; /* Шрифт FontAwesome */
  font-weight: 900; /* Вес шрифта FontAwesome */
  color: #fff; /* Цвет иконки */
  font-size: 24px; /* Размер иконки */
  position: absolute;
  top: 50%; /* Центровка по вертикали */
  left: 50%; /* Центровка по горизонтали */
  transform: translate(-50%, -50%); /* Корректировка центровки */
  
}

.wheel-and-hamster {
  --dur: 1s;
  position: relative;
  width: 12em;
  height: 12em;
  font-size: 14px;
}

.wheel,
.hamster,
.hamster div,
.spoke {
  position: absolute;
}

.wheel,
.spoke {
  border-radius: 50%;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.wheel {
  background: radial-gradient(100% 100% at center,hsla(0,0%,60%,0) 47.8%,hsl(0,0%,60%) 48%);
  z-index: 2;
}

.hamster {
  animation: hamster var(--dur) ease-in-out infinite;
  top: 50%;
  left: calc(50% - 3.5em);
  width: 7em;
  height: 3.75em;
  transform: rotate(4deg) translate(-0.8em,1.85em);
  transform-origin: 50% 0;
  z-index: 1;
}

.hamster__head {
  animation: hamsterHead var(--dur) ease-in-out infinite;
  background: hsl(30,90%,55%);
  border-radius: 70% 30% 0 100% / 40% 25% 25% 60%;
  box-shadow: 0 -0.25em 0 hsl(30,90%,80%) inset,
		0.75em -1.55em 0 hsl(30,90%,90%) inset;
  top: 0;
  left: -2em;
  width: 2.75em;
  height: 2.5em;
  transform-origin: 100% 50%;
}

.hamster__ear {
  animation: hamsterEar var(--dur) ease-in-out infinite;
  background: hsl(0,90%,85%);
  border-radius: 50%;
  box-shadow: -0.25em 0 hsl(30,90%,55%) inset;
  top: -0.25em;
  right: -0.25em;
  width: 0.75em;
  height: 0.75em;
  transform-origin: 50% 75%;
}

.hamster__eye {
  animation: hamsterEye var(--dur) linear infinite;
  background-color: hsl(0,0%,0%);
  border-radius: 50%;
  top: 0.375em;
  left: 1.25em;
  width: 0.5em;
  height: 0.5em;
}

.hamster__nose {
  background: hsl(0,90%,75%);
  border-radius: 35% 65% 85% 15% / 70% 50% 50% 30%;
  top: 0.75em;
  left: 0;
  width: 0.2em;
  height: 0.25em;
}

.hamster__body {
  animation: hamsterBody var(--dur) ease-in-out infinite;
  background: hsl(30,90%,90%);
  border-radius: 50% 30% 50% 30% / 15% 60% 40% 40%;
  box-shadow: 0.1em 0.75em 0 hsl(30,90%,55%) inset,
		0.15em -0.5em 0 hsl(30,90%,80%) inset;
  top: 0.25em;
  left: 2em;
  width: 4.5em;
  height: 3em;
  transform-origin: 17% 50%;
  transform-style: preserve-3d;
}

.hamster__limb--fr,
.hamster__limb--fl {
  clip-path: polygon(0 0,100% 0,70% 80%,60% 100%,0% 100%,40% 80%);
  top: 2em;
  left: 0.5em;
  width: 1em;
  height: 1.5em;
  transform-origin: 50% 0;
}

.hamster__limb--fr {
  animation: hamsterFRLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30,90%,80%) 80%,hsl(0,90%,75%) 80%);
  transform: rotate(15deg) translateZ(-1px);
}

.hamster__limb--fl {
  animation: hamsterFLLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30,90%,90%) 80%,hsl(0,90%,85%) 80%);
  transform: rotate(15deg);
}

.hamster__limb--br,
.hamster__limb--bl {
  border-radius: 0.75em 0.75em 0 0;
  clip-path: polygon(0 0,100% 0,100% 30%,70% 90%,70% 100%,30% 100%,40% 90%,0% 30%);
  top: 1em;
  left: 2.8em;
  width: 1.5em;
  height: 2.5em;
  transform-origin: 50% 30%;
}

.hamster__limb--br {
  animation: hamsterBRLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30,90%,80%) 90%,hsl(0,90%,75%) 90%);
  transform: rotate(-25deg) translateZ(-1px);
}

.hamster__limb--bl {
  animation: hamsterBLLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30,90%,90%) 90%,hsl(0,90%,85%) 90%);
  transform: rotate(-25deg);
}

.hamster__tail {
  animation: hamsterTail var(--dur) linear infinite;
  background: hsl(0,90%,85%);
  border-radius: 0.25em 50% 50% 0.25em;
  box-shadow: 0 -0.2em 0 hsl(0,90%,75%) inset;
  top: 1.5em;
  right: -0.5em;
  width: 1em;
  height: 0.5em;
  transform: rotate(30deg) translateZ(-1px);
  transform-origin: 0.25em 0.25em;
}

.spoke {
  animation: spoke var(--dur) linear infinite;
  background: radial-gradient(100% 100% at center,hsl(0,0%,60%) 4.8%,hsla(0,0%,60%,0) 5%),
		linear-gradient(hsla(0,0%,55%,0) 46.9%,hsl(0,0%,65%) 47% 52.9%,hsla(0,0%,65%,0) 53%) 50% 50% / 99% 99% no-repeat;
}

/* Animations */
@keyframes hamster {
  from, to {
    transform: rotate(4deg) translate(-0.8em,1.85em);
  }

  50% {
    transform: rotate(0) translate(-0.8em,1.85em);
  }
}

@keyframes hamsterHead {
  from, 25%, 50%, 75%, to {
    transform: rotate(0);
  }

  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(8deg);
  }
}

@keyframes hamsterEye {
  from, 90%, to {
    transform: scaleY(1);
  }

  95% {
    transform: scaleY(0);
  }
}

@keyframes hamsterEar {
  from, 25%, 50%, 75%, to {
    transform: rotate(0);
  }

  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(12deg);
  }
}

@keyframes hamsterBody {
  from, 25%, 50%, 75%, to {
    transform: rotate(0);
  }

  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(-2deg);
  }
}

@keyframes hamsterFRLimb {
  from, 25%, 50%, 75%, to {
    transform: rotate(50deg) translateZ(-1px);
  }

  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(-30deg) translateZ(-1px);
  }
}

@keyframes hamsterFLLimb {
  from, 25%, 50%, 75%, to {
    transform: rotate(-30deg);
  }

  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(50deg);
  }
}

@keyframes hamsterBRLimb {
  from, 25%, 50%, 75%, to {
    transform: rotate(-60deg) translateZ(-1px);
  }

  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(20deg) translateZ(-1px);
  }
}

@keyframes hamsterBLLimb {
  from, 25%, 50%, 75%, to {
    transform: rotate(20deg);
  }

  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(-60deg);
  }
}

@keyframes hamsterTail {
  from, 25%, 50%, 75%, to {
    transform: rotate(30deg) translateZ(-1px);
  }

  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(10deg) translateZ(-1px);
  }
}

@keyframes spoke {
  from {
    transform: rotate(0);
  }

  to {
    transform: rotate(-1turn);
  }
}
